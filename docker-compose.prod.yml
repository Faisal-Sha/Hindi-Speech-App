version: "3.9"

services:
  nginx:
    build:
      context: ./frontend
      target: production
      args:
        NODE_VERSION: 20
    depends_on:
      - backend
    environment:
      - SERVER_NAME=${SERVER_NAME:-localhost}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - certbot-www:/var/www/certbot
      - certbot-certs:/etc/letsencrypt

  backend:
    build:
      context: ./backend
      target: production
      args:
        NODE_VERSION: 20
    environment:
      - NODE_ENV=production
      - PORT=3001
      - FRONTEND_URL=${FRONTEND_URL:-https://localhost}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_NAME=${DB_NAME:-personal_assistant}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRE=${JWT_EXPIRE:-7d}
    ports:
      - "3001:3001"
    depends_on:
      - postgres

  postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_DB=${DB_NAME:-personal_assistant}
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
    volumes:
      - postgres-data:/var/lib/postgresql/data

  certbot:
    image: certbot/certbot:latest
    depends_on:
      - nginx
    entrypoint: /bin/sh
    command: -c "trap exit TERM INT; while :; do certbot renew --webroot -w /var/www/certbot; sleep ${CERTBOT_RENEW_INTERVAL:-12h}; done"
    volumes:
      - certbot-www:/var/www/certbot
      - certbot-certs:/etc/letsencrypt

volumes:
  postgres-data:
  certbot-www:
  certbot-certs:
